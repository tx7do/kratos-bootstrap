// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: conf/v1/kratos_conf_tls.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TLS配置
type TLS struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	File               *TLS_File              `protobuf:"bytes,1,opt,name=file,proto3,oneof" json:"file,omitempty"`
	Config             *TLS_Config            `protobuf:"bytes,2,opt,name=config,proto3,oneof" json:"config,omitempty"`
	InsecureSkipVerify bool                   `protobuf:"varint,3,opt,name=insecure_skip_verify,json=insecureSkipVerify,proto3" json:"insecure_skip_verify,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *TLS) Reset() {
	*x = TLS{}
	mi := &file_conf_v1_kratos_conf_tls_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TLS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLS) ProtoMessage() {}

func (x *TLS) ProtoReflect() protoreflect.Message {
	mi := &file_conf_v1_kratos_conf_tls_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLS.ProtoReflect.Descriptor instead.
func (*TLS) Descriptor() ([]byte, []int) {
	return file_conf_v1_kratos_conf_tls_proto_rawDescGZIP(), []int{0}
}

func (x *TLS) GetFile() *TLS_File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *TLS) GetConfig() *TLS_Config {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *TLS) GetInsecureSkipVerify() bool {
	if x != nil {
		return x.InsecureSkipVerify
	}
	return false
}

type TLS_File struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CertPath      *string                `protobuf:"bytes,1,opt,name=cert_path,json=certPath,proto3,oneof" json:"cert_path,omitempty"`
	KeyPath       *string                `protobuf:"bytes,2,opt,name=key_path,json=keyPath,proto3,oneof" json:"key_path,omitempty"`
	CaPath        *string                `protobuf:"bytes,3,opt,name=ca_path,json=caPath,proto3,oneof" json:"ca_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TLS_File) Reset() {
	*x = TLS_File{}
	mi := &file_conf_v1_kratos_conf_tls_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TLS_File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLS_File) ProtoMessage() {}

func (x *TLS_File) ProtoReflect() protoreflect.Message {
	mi := &file_conf_v1_kratos_conf_tls_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLS_File.ProtoReflect.Descriptor instead.
func (*TLS_File) Descriptor() ([]byte, []int) {
	return file_conf_v1_kratos_conf_tls_proto_rawDescGZIP(), []int{0, 0}
}

func (x *TLS_File) GetCertPath() string {
	if x != nil && x.CertPath != nil {
		return *x.CertPath
	}
	return ""
}

func (x *TLS_File) GetKeyPath() string {
	if x != nil && x.KeyPath != nil {
		return *x.KeyPath
	}
	return ""
}

func (x *TLS_File) GetCaPath() string {
	if x != nil && x.CaPath != nil {
		return *x.CaPath
	}
	return ""
}

type TLS_Config struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CertPem       []byte                 `protobuf:"bytes,1,opt,name=cert_pem,json=certPem,proto3,oneof" json:"cert_pem,omitempty"`
	KeyPem        []byte                 `protobuf:"bytes,2,opt,name=key_pem,json=keyPem,proto3,oneof" json:"key_pem,omitempty"`
	CaPem         []byte                 `protobuf:"bytes,3,opt,name=ca_pem,json=caPem,proto3,oneof" json:"ca_pem,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TLS_Config) Reset() {
	*x = TLS_Config{}
	mi := &file_conf_v1_kratos_conf_tls_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TLS_Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLS_Config) ProtoMessage() {}

func (x *TLS_Config) ProtoReflect() protoreflect.Message {
	mi := &file_conf_v1_kratos_conf_tls_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLS_Config.ProtoReflect.Descriptor instead.
func (*TLS_Config) Descriptor() ([]byte, []int) {
	return file_conf_v1_kratos_conf_tls_proto_rawDescGZIP(), []int{0, 1}
}

func (x *TLS_Config) GetCertPem() []byte {
	if x != nil {
		return x.CertPem
	}
	return nil
}

func (x *TLS_Config) GetKeyPem() []byte {
	if x != nil {
		return x.KeyPem
	}
	return nil
}

func (x *TLS_Config) GetCaPem() []byte {
	if x != nil {
		return x.CaPem
	}
	return nil
}

var File_conf_v1_kratos_conf_tls_proto protoreflect.FileDescriptor

const file_conf_v1_kratos_conf_tls_proto_rawDesc = "" +
	"\n" +
	"\x1dconf/v1/kratos_conf_tls.proto\x12\x04conf\"\xbc\x03\n" +
	"\x03TLS\x12'\n" +
	"\x04file\x18\x01 \x01(\v2\x0e.conf.TLS.FileH\x00R\x04file\x88\x01\x01\x12-\n" +
	"\x06config\x18\x02 \x01(\v2\x10.conf.TLS.ConfigH\x01R\x06config\x88\x01\x01\x120\n" +
	"\x14insecure_skip_verify\x18\x03 \x01(\bR\x12insecureSkipVerify\x1a\x8d\x01\n" +
	"\x04File\x12 \n" +
	"\tcert_path\x18\x01 \x01(\tH\x00R\bcertPath\x88\x01\x01\x12\x1e\n" +
	"\bkey_path\x18\x02 \x01(\tH\x01R\akeyPath\x88\x01\x01\x12\x1c\n" +
	"\aca_path\x18\x03 \x01(\tH\x02R\x06caPath\x88\x01\x01B\f\n" +
	"\n" +
	"_cert_pathB\v\n" +
	"\t_key_pathB\n" +
	"\n" +
	"\b_ca_path\x1a\x86\x01\n" +
	"\x06Config\x12\x1e\n" +
	"\bcert_pem\x18\x01 \x01(\fH\x00R\acertPem\x88\x01\x01\x12\x1c\n" +
	"\akey_pem\x18\x02 \x01(\fH\x01R\x06keyPem\x88\x01\x01\x12\x1a\n" +
	"\x06ca_pem\x18\x03 \x01(\fH\x02R\x05caPem\x88\x01\x01B\v\n" +
	"\t_cert_pemB\n" +
	"\n" +
	"\b_key_pemB\t\n" +
	"\a_ca_pemB\a\n" +
	"\x05_fileB\t\n" +
	"\a_configB\x84\x01\n" +
	"\bcom.confB\x12KratosConfTlsProtoP\x01Z4github.com/tx7do/kratos-bootstrap/api/gen/go/conf/v1\xa2\x02\x03CXX\xaa\x02\x04Conf\xca\x02\x04Conf\xe2\x02\x10Conf\\GPBMetadata\xea\x02\x04Confb\x06proto3"

var (
	file_conf_v1_kratos_conf_tls_proto_rawDescOnce sync.Once
	file_conf_v1_kratos_conf_tls_proto_rawDescData []byte
)

func file_conf_v1_kratos_conf_tls_proto_rawDescGZIP() []byte {
	file_conf_v1_kratos_conf_tls_proto_rawDescOnce.Do(func() {
		file_conf_v1_kratos_conf_tls_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_conf_v1_kratos_conf_tls_proto_rawDesc), len(file_conf_v1_kratos_conf_tls_proto_rawDesc)))
	})
	return file_conf_v1_kratos_conf_tls_proto_rawDescData
}

var file_conf_v1_kratos_conf_tls_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_conf_v1_kratos_conf_tls_proto_goTypes = []any{
	(*TLS)(nil),        // 0: conf.TLS
	(*TLS_File)(nil),   // 1: conf.TLS.File
	(*TLS_Config)(nil), // 2: conf.TLS.Config
}
var file_conf_v1_kratos_conf_tls_proto_depIdxs = []int32{
	1, // 0: conf.TLS.file:type_name -> conf.TLS.File
	2, // 1: conf.TLS.config:type_name -> conf.TLS.Config
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_conf_v1_kratos_conf_tls_proto_init() }
func file_conf_v1_kratos_conf_tls_proto_init() {
	if File_conf_v1_kratos_conf_tls_proto != nil {
		return
	}
	file_conf_v1_kratos_conf_tls_proto_msgTypes[0].OneofWrappers = []any{}
	file_conf_v1_kratos_conf_tls_proto_msgTypes[1].OneofWrappers = []any{}
	file_conf_v1_kratos_conf_tls_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_conf_v1_kratos_conf_tls_proto_rawDesc), len(file_conf_v1_kratos_conf_tls_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_conf_v1_kratos_conf_tls_proto_goTypes,
		DependencyIndexes: file_conf_v1_kratos_conf_tls_proto_depIdxs,
		MessageInfos:      file_conf_v1_kratos_conf_tls_proto_msgTypes,
	}.Build()
	File_conf_v1_kratos_conf_tls_proto = out.File
	file_conf_v1_kratos_conf_tls_proto_goTypes = nil
	file_conf_v1_kratos_conf_tls_proto_depIdxs = nil
}
