// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: conf/v1/kratos_conf_logger.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 日志
type Logger struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Zap           *Logger_Zap            `protobuf:"bytes,2,opt,name=zap,proto3,oneof" json:"zap,omitempty"`
	Logrus        *Logger_Logrus         `protobuf:"bytes,3,opt,name=logrus,proto3,oneof" json:"logrus,omitempty"`
	Fluent        *Logger_Fluent         `protobuf:"bytes,4,opt,name=fluent,proto3,oneof" json:"fluent,omitempty"`
	Aliyun        *Logger_Aliyun         `protobuf:"bytes,5,opt,name=aliyun,proto3,oneof" json:"aliyun,omitempty"`
	Tencent       *Logger_Tencent        `protobuf:"bytes,6,opt,name=tencent,proto3,oneof" json:"tencent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Logger) Reset() {
	*x = Logger{}
	mi := &file_conf_v1_kratos_conf_logger_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Logger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Logger) ProtoMessage() {}

func (x *Logger) ProtoReflect() protoreflect.Message {
	mi := &file_conf_v1_kratos_conf_logger_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Logger.ProtoReflect.Descriptor instead.
func (*Logger) Descriptor() ([]byte, []int) {
	return file_conf_v1_kratos_conf_logger_proto_rawDescGZIP(), []int{0}
}

func (x *Logger) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Logger) GetZap() *Logger_Zap {
	if x != nil {
		return x.Zap
	}
	return nil
}

func (x *Logger) GetLogrus() *Logger_Logrus {
	if x != nil {
		return x.Logrus
	}
	return nil
}

func (x *Logger) GetFluent() *Logger_Fluent {
	if x != nil {
		return x.Fluent
	}
	return nil
}

func (x *Logger) GetAliyun() *Logger_Aliyun {
	if x != nil {
		return x.Aliyun
	}
	return nil
}

func (x *Logger) GetTencent() *Logger_Tencent {
	if x != nil {
		return x.Tencent
	}
	return nil
}

// Zap
type Logger_Zap struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`                        //
	Level         string                 `protobuf:"bytes,2,opt,name=level,proto3" json:"level,omitempty"`                              //
	MaxSize       int32                  `protobuf:"varint,3,opt,name=max_size,json=maxSize,proto3" json:"max_size,omitempty"`          //
	MaxAge        int32                  `protobuf:"varint,4,opt,name=max_age,json=maxAge,proto3" json:"max_age,omitempty"`             //
	MaxBackups    int32                  `protobuf:"varint,5,opt,name=max_backups,json=maxBackups,proto3" json:"max_backups,omitempty"` //
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Logger_Zap) Reset() {
	*x = Logger_Zap{}
	mi := &file_conf_v1_kratos_conf_logger_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Logger_Zap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Logger_Zap) ProtoMessage() {}

func (x *Logger_Zap) ProtoReflect() protoreflect.Message {
	mi := &file_conf_v1_kratos_conf_logger_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Logger_Zap.ProtoReflect.Descriptor instead.
func (*Logger_Zap) Descriptor() ([]byte, []int) {
	return file_conf_v1_kratos_conf_logger_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Logger_Zap) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *Logger_Zap) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *Logger_Zap) GetMaxSize() int32 {
	if x != nil {
		return x.MaxSize
	}
	return 0
}

func (x *Logger_Zap) GetMaxAge() int32 {
	if x != nil {
		return x.MaxAge
	}
	return 0
}

func (x *Logger_Zap) GetMaxBackups() int32 {
	if x != nil {
		return x.MaxBackups
	}
	return 0
}

// logrus
type Logger_Logrus struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Level            string                 `protobuf:"bytes,1,opt,name=level,proto3" json:"level,omitempty"`                                                // 日志等级
	Formatter        string                 `protobuf:"bytes,2,opt,name=formatter,proto3" json:"formatter,omitempty"`                                        // 输出格式：text, json.
	TimestampFormat  string                 `protobuf:"bytes,3,opt,name=timestamp_format,json=timestampFormat,proto3" json:"timestamp_format,omitempty"`     // 定义时间戳格式，例如："2006-01-02 15:04:05"
	DisableColors    bool                   `protobuf:"varint,4,opt,name=disable_colors,json=disableColors,proto3" json:"disable_colors,omitempty"`          // 不需要彩色日志
	DisableTimestamp bool                   `protobuf:"varint,5,opt,name=disable_timestamp,json=disableTimestamp,proto3" json:"disable_timestamp,omitempty"` // 不需要时间戳
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Logger_Logrus) Reset() {
	*x = Logger_Logrus{}
	mi := &file_conf_v1_kratos_conf_logger_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Logger_Logrus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Logger_Logrus) ProtoMessage() {}

func (x *Logger_Logrus) ProtoReflect() protoreflect.Message {
	mi := &file_conf_v1_kratos_conf_logger_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Logger_Logrus.ProtoReflect.Descriptor instead.
func (*Logger_Logrus) Descriptor() ([]byte, []int) {
	return file_conf_v1_kratos_conf_logger_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Logger_Logrus) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *Logger_Logrus) GetFormatter() string {
	if x != nil {
		return x.Formatter
	}
	return ""
}

func (x *Logger_Logrus) GetTimestampFormat() string {
	if x != nil {
		return x.TimestampFormat
	}
	return ""
}

func (x *Logger_Logrus) GetDisableColors() bool {
	if x != nil {
		return x.DisableColors
	}
	return false
}

func (x *Logger_Logrus) GetDisableTimestamp() bool {
	if x != nil {
		return x.DisableTimestamp
	}
	return false
}

// Fluent
type Logger_Fluent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Endpoint      string                 `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"` // 公网接入地址
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Logger_Fluent) Reset() {
	*x = Logger_Fluent{}
	mi := &file_conf_v1_kratos_conf_logger_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Logger_Fluent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Logger_Fluent) ProtoMessage() {}

func (x *Logger_Fluent) ProtoReflect() protoreflect.Message {
	mi := &file_conf_v1_kratos_conf_logger_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Logger_Fluent.ProtoReflect.Descriptor instead.
func (*Logger_Fluent) Descriptor() ([]byte, []int) {
	return file_conf_v1_kratos_conf_logger_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Logger_Fluent) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

// 阿里云
type Logger_Aliyun struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Endpoint      string                 `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`                             // 公网接入地址
	Project       string                 `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`                               //
	AccessKey     string                 `protobuf:"bytes,3,opt,name=access_key,json=accessKey,proto3" json:"access_key,omitempty"`          // 访问密钥ID
	AccessSecret  string                 `protobuf:"bytes,4,opt,name=access_secret,json=accessSecret,proto3" json:"access_secret,omitempty"` // 访问密钥
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Logger_Aliyun) Reset() {
	*x = Logger_Aliyun{}
	mi := &file_conf_v1_kratos_conf_logger_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Logger_Aliyun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Logger_Aliyun) ProtoMessage() {}

func (x *Logger_Aliyun) ProtoReflect() protoreflect.Message {
	mi := &file_conf_v1_kratos_conf_logger_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Logger_Aliyun.ProtoReflect.Descriptor instead.
func (*Logger_Aliyun) Descriptor() ([]byte, []int) {
	return file_conf_v1_kratos_conf_logger_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Logger_Aliyun) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *Logger_Aliyun) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *Logger_Aliyun) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *Logger_Aliyun) GetAccessSecret() string {
	if x != nil {
		return x.AccessSecret
	}
	return ""
}

// 腾讯
type Logger_Tencent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Endpoint      string                 `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`                             // 公网接入地址
	TopicId       string                 `protobuf:"bytes,2,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`                //
	AccessKey     string                 `protobuf:"bytes,3,opt,name=access_key,json=accessKey,proto3" json:"access_key,omitempty"`          // 访问密钥ID
	AccessSecret  string                 `protobuf:"bytes,4,opt,name=access_secret,json=accessSecret,proto3" json:"access_secret,omitempty"` // 访问密钥
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Logger_Tencent) Reset() {
	*x = Logger_Tencent{}
	mi := &file_conf_v1_kratos_conf_logger_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Logger_Tencent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Logger_Tencent) ProtoMessage() {}

func (x *Logger_Tencent) ProtoReflect() protoreflect.Message {
	mi := &file_conf_v1_kratos_conf_logger_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Logger_Tencent.ProtoReflect.Descriptor instead.
func (*Logger_Tencent) Descriptor() ([]byte, []int) {
	return file_conf_v1_kratos_conf_logger_proto_rawDescGZIP(), []int{0, 4}
}

func (x *Logger_Tencent) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *Logger_Tencent) GetTopicId() string {
	if x != nil {
		return x.TopicId
	}
	return ""
}

func (x *Logger_Tencent) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *Logger_Tencent) GetAccessSecret() string {
	if x != nil {
		return x.AccessSecret
	}
	return ""
}

var File_conf_v1_kratos_conf_logger_proto protoreflect.FileDescriptor

const file_conf_v1_kratos_conf_logger_proto_rawDesc = "" +
	"\n" +
	" conf/v1/kratos_conf_logger.proto\x12\x04conf\"\xc4\a\n" +
	"\x06Logger\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12'\n" +
	"\x03zap\x18\x02 \x01(\v2\x10.conf.Logger.ZapH\x00R\x03zap\x88\x01\x01\x120\n" +
	"\x06logrus\x18\x03 \x01(\v2\x13.conf.Logger.LogrusH\x01R\x06logrus\x88\x01\x01\x120\n" +
	"\x06fluent\x18\x04 \x01(\v2\x13.conf.Logger.FluentH\x02R\x06fluent\x88\x01\x01\x120\n" +
	"\x06aliyun\x18\x05 \x01(\v2\x13.conf.Logger.AliyunH\x03R\x06aliyun\x88\x01\x01\x123\n" +
	"\atencent\x18\x06 \x01(\v2\x14.conf.Logger.TencentH\x04R\atencent\x88\x01\x01\x1a\x8c\x01\n" +
	"\x03Zap\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12\x14\n" +
	"\x05level\x18\x02 \x01(\tR\x05level\x12\x19\n" +
	"\bmax_size\x18\x03 \x01(\x05R\amaxSize\x12\x17\n" +
	"\amax_age\x18\x04 \x01(\x05R\x06maxAge\x12\x1f\n" +
	"\vmax_backups\x18\x05 \x01(\x05R\n" +
	"maxBackups\x1a\xbb\x01\n" +
	"\x06Logrus\x12\x14\n" +
	"\x05level\x18\x01 \x01(\tR\x05level\x12\x1c\n" +
	"\tformatter\x18\x02 \x01(\tR\tformatter\x12)\n" +
	"\x10timestamp_format\x18\x03 \x01(\tR\x0ftimestampFormat\x12%\n" +
	"\x0edisable_colors\x18\x04 \x01(\bR\rdisableColors\x12+\n" +
	"\x11disable_timestamp\x18\x05 \x01(\bR\x10disableTimestamp\x1a$\n" +
	"\x06Fluent\x12\x1a\n" +
	"\bendpoint\x18\x01 \x01(\tR\bendpoint\x1a\x82\x01\n" +
	"\x06Aliyun\x12\x1a\n" +
	"\bendpoint\x18\x01 \x01(\tR\bendpoint\x12\x18\n" +
	"\aproject\x18\x02 \x01(\tR\aproject\x12\x1d\n" +
	"\n" +
	"access_key\x18\x03 \x01(\tR\taccessKey\x12#\n" +
	"\raccess_secret\x18\x04 \x01(\tR\faccessSecret\x1a\x84\x01\n" +
	"\aTencent\x12\x1a\n" +
	"\bendpoint\x18\x01 \x01(\tR\bendpoint\x12\x19\n" +
	"\btopic_id\x18\x02 \x01(\tR\atopicId\x12\x1d\n" +
	"\n" +
	"access_key\x18\x03 \x01(\tR\taccessKey\x12#\n" +
	"\raccess_secret\x18\x04 \x01(\tR\faccessSecretB\x06\n" +
	"\x04_zapB\t\n" +
	"\a_logrusB\t\n" +
	"\a_fluentB\t\n" +
	"\a_aliyunB\n" +
	"\n" +
	"\b_tencentB\x87\x01\n" +
	"\bcom.confB\x15KratosConfLoggerProtoP\x01Z4github.com/tx7do/kratos-bootstrap/api/gen/go/conf/v1\xa2\x02\x03CXX\xaa\x02\x04Conf\xca\x02\x04Conf\xe2\x02\x10Conf\\GPBMetadata\xea\x02\x04Confb\x06proto3"

var (
	file_conf_v1_kratos_conf_logger_proto_rawDescOnce sync.Once
	file_conf_v1_kratos_conf_logger_proto_rawDescData []byte
)

func file_conf_v1_kratos_conf_logger_proto_rawDescGZIP() []byte {
	file_conf_v1_kratos_conf_logger_proto_rawDescOnce.Do(func() {
		file_conf_v1_kratos_conf_logger_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_conf_v1_kratos_conf_logger_proto_rawDesc), len(file_conf_v1_kratos_conf_logger_proto_rawDesc)))
	})
	return file_conf_v1_kratos_conf_logger_proto_rawDescData
}

var file_conf_v1_kratos_conf_logger_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_conf_v1_kratos_conf_logger_proto_goTypes = []any{
	(*Logger)(nil),         // 0: conf.Logger
	(*Logger_Zap)(nil),     // 1: conf.Logger.Zap
	(*Logger_Logrus)(nil),  // 2: conf.Logger.Logrus
	(*Logger_Fluent)(nil),  // 3: conf.Logger.Fluent
	(*Logger_Aliyun)(nil),  // 4: conf.Logger.Aliyun
	(*Logger_Tencent)(nil), // 5: conf.Logger.Tencent
}
var file_conf_v1_kratos_conf_logger_proto_depIdxs = []int32{
	1, // 0: conf.Logger.zap:type_name -> conf.Logger.Zap
	2, // 1: conf.Logger.logrus:type_name -> conf.Logger.Logrus
	3, // 2: conf.Logger.fluent:type_name -> conf.Logger.Fluent
	4, // 3: conf.Logger.aliyun:type_name -> conf.Logger.Aliyun
	5, // 4: conf.Logger.tencent:type_name -> conf.Logger.Tencent
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_conf_v1_kratos_conf_logger_proto_init() }
func file_conf_v1_kratos_conf_logger_proto_init() {
	if File_conf_v1_kratos_conf_logger_proto != nil {
		return
	}
	file_conf_v1_kratos_conf_logger_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_conf_v1_kratos_conf_logger_proto_rawDesc), len(file_conf_v1_kratos_conf_logger_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_conf_v1_kratos_conf_logger_proto_goTypes,
		DependencyIndexes: file_conf_v1_kratos_conf_logger_proto_depIdxs,
		MessageInfos:      file_conf_v1_kratos_conf_logger_proto_msgTypes,
	}.Build()
	File_conf_v1_kratos_conf_logger_proto = out.File
	file_conf_v1_kratos_conf_logger_proto_goTypes = nil
	file_conf_v1_kratos_conf_logger_proto_depIdxs = nil
}
