// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: conf/v1/kratos_conf_registry.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 注册发现中心
type Registry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Consul        *Registry_Consul       `protobuf:"bytes,2,opt,name=consul,proto3,oneof" json:"consul,omitempty"`           // Consul
	Etcd          *Registry_Etcd         `protobuf:"bytes,3,opt,name=etcd,proto3,oneof" json:"etcd,omitempty"`               // Etcd
	Zookeeper     *Registry_ZooKeeper    `protobuf:"bytes,4,opt,name=zookeeper,proto3,oneof" json:"zookeeper,omitempty"`     // ZooKeeper
	Nacos         *Registry_Nacos        `protobuf:"bytes,5,opt,name=nacos,proto3,oneof" json:"nacos,omitempty"`             // Nacos
	Kubernetes    *Registry_Kubernetes   `protobuf:"bytes,6,opt,name=kubernetes,proto3,oneof" json:"kubernetes,omitempty"`   // Kubernetes
	Eureka        *Registry_Eureka       `protobuf:"bytes,7,opt,name=eureka,proto3,oneof" json:"eureka,omitempty"`           // Eureka
	Polaris       *Registry_Polaris      `protobuf:"bytes,8,opt,name=polaris,proto3,oneof" json:"polaris,omitempty"`         // Polaris
	Servicecomb   *Registry_Servicecomb  `protobuf:"bytes,9,opt,name=servicecomb,proto3,oneof" json:"servicecomb,omitempty"` // Servicecomb
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Registry) Reset() {
	*x = Registry{}
	mi := &file_conf_v1_kratos_conf_registry_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Registry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Registry) ProtoMessage() {}

func (x *Registry) ProtoReflect() protoreflect.Message {
	mi := &file_conf_v1_kratos_conf_registry_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Registry.ProtoReflect.Descriptor instead.
func (*Registry) Descriptor() ([]byte, []int) {
	return file_conf_v1_kratos_conf_registry_proto_rawDescGZIP(), []int{0}
}

func (x *Registry) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Registry) GetConsul() *Registry_Consul {
	if x != nil {
		return x.Consul
	}
	return nil
}

func (x *Registry) GetEtcd() *Registry_Etcd {
	if x != nil {
		return x.Etcd
	}
	return nil
}

func (x *Registry) GetZookeeper() *Registry_ZooKeeper {
	if x != nil {
		return x.Zookeeper
	}
	return nil
}

func (x *Registry) GetNacos() *Registry_Nacos {
	if x != nil {
		return x.Nacos
	}
	return nil
}

func (x *Registry) GetKubernetes() *Registry_Kubernetes {
	if x != nil {
		return x.Kubernetes
	}
	return nil
}

func (x *Registry) GetEureka() *Registry_Eureka {
	if x != nil {
		return x.Eureka
	}
	return nil
}

func (x *Registry) GetPolaris() *Registry_Polaris {
	if x != nil {
		return x.Polaris
	}
	return nil
}

func (x *Registry) GetServicecomb() *Registry_Servicecomb {
	if x != nil {
		return x.Servicecomb
	}
	return nil
}

// Consul
type Registry_Consul struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scheme        string                 `protobuf:"bytes,1,opt,name=scheme,proto3" json:"scheme,omitempty"`                               // 网络样式
	Address       string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`                             // 服务端地址
	HealthCheck   bool                   `protobuf:"varint,3,opt,name=health_check,json=healthCheck,proto3" json:"health_check,omitempty"` // 健康检查
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Registry_Consul) Reset() {
	*x = Registry_Consul{}
	mi := &file_conf_v1_kratos_conf_registry_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Registry_Consul) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Registry_Consul) ProtoMessage() {}

func (x *Registry_Consul) ProtoReflect() protoreflect.Message {
	mi := &file_conf_v1_kratos_conf_registry_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Registry_Consul.ProtoReflect.Descriptor instead.
func (*Registry_Consul) Descriptor() ([]byte, []int) {
	return file_conf_v1_kratos_conf_registry_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Registry_Consul) GetScheme() string {
	if x != nil {
		return x.Scheme
	}
	return ""
}

func (x *Registry_Consul) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Registry_Consul) GetHealthCheck() bool {
	if x != nil {
		return x.HealthCheck
	}
	return false
}

// Etcd
type Registry_Etcd struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Endpoints     []string               `protobuf:"bytes,1,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Registry_Etcd) Reset() {
	*x = Registry_Etcd{}
	mi := &file_conf_v1_kratos_conf_registry_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Registry_Etcd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Registry_Etcd) ProtoMessage() {}

func (x *Registry_Etcd) ProtoReflect() protoreflect.Message {
	mi := &file_conf_v1_kratos_conf_registry_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Registry_Etcd.ProtoReflect.Descriptor instead.
func (*Registry_Etcd) Descriptor() ([]byte, []int) {
	return file_conf_v1_kratos_conf_registry_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Registry_Etcd) GetEndpoints() []string {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

// ZooKeeper
type Registry_ZooKeeper struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Endpoints     []string               `protobuf:"bytes,1,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	Timeout       *durationpb.Duration   `protobuf:"bytes,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Registry_ZooKeeper) Reset() {
	*x = Registry_ZooKeeper{}
	mi := &file_conf_v1_kratos_conf_registry_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Registry_ZooKeeper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Registry_ZooKeeper) ProtoMessage() {}

func (x *Registry_ZooKeeper) ProtoReflect() protoreflect.Message {
	mi := &file_conf_v1_kratos_conf_registry_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Registry_ZooKeeper.ProtoReflect.Descriptor instead.
func (*Registry_ZooKeeper) Descriptor() ([]byte, []int) {
	return file_conf_v1_kratos_conf_registry_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Registry_ZooKeeper) GetEndpoints() []string {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *Registry_ZooKeeper) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

// Nacos
type Registry_Nacos struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Address              string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`                                                             // 服务端地址
	Port                 uint64                 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`                                                                  // 服务端端口
	NamespaceId          string                 `protobuf:"bytes,3,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`                                  // 命名空间ID
	RegionId             string                 `protobuf:"bytes,4,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`                                           // 区域ID
	AppName              string                 `protobuf:"bytes,5,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`                                              // 应用名称
	AppKey               string                 `protobuf:"bytes,6,opt,name=app_key,json=appKey,proto3" json:"app_key,omitempty"`                                                 // 应用密钥
	AccessKey            string                 `protobuf:"bytes,7,opt,name=access_key,json=accessKey,proto3" json:"access_key,omitempty"`                                        // 访问密钥
	SecretKey            string                 `protobuf:"bytes,8,opt,name=secret_key,json=secretKey,proto3" json:"secret_key,omitempty"`                                        // 密钥
	Username             string                 `protobuf:"bytes,9,opt,name=username,proto3" json:"username,omitempty"`                                                           // 用户名
	Password             string                 `protobuf:"bytes,10,opt,name=password,proto3" json:"password,omitempty"`                                                          // 密码
	Timeout              *durationpb.Duration   `protobuf:"bytes,20,opt,name=timeout,proto3" json:"timeout,omitempty"`                                                            // http请求超时时间，单位: 毫秒
	BeatInterval         *durationpb.Duration   `protobuf:"bytes,21,opt,name=beat_interval,json=beatInterval,proto3" json:"beat_interval,omitempty"`                              // 心跳间隔时间，单位: 毫秒
	ListenInterval       *durationpb.Duration   `protobuf:"bytes,22,opt,name=listen_interval,json=listenInterval,proto3" json:"listen_interval,omitempty"`                        // 心跳间隔时间，单位: 毫秒
	UpdateThreadNum      int32                  `protobuf:"varint,30,opt,name=update_thread_num,json=updateThreadNum,proto3" json:"update_thread_num,omitempty"`                  // 更新服务的线程数
	NotLoadCacheAtStart  bool                   `protobuf:"varint,40,opt,name=not_load_cache_at_start,json=notLoadCacheAtStart,proto3" json:"not_load_cache_at_start,omitempty"`  // 在启动时不读取本地缓存数据，true: 不读取，false: 读取
	UpdateCacheWhenEmpty bool                   `protobuf:"varint,41,opt,name=update_cache_when_empty,json=updateCacheWhenEmpty,proto3" json:"update_cache_when_empty,omitempty"` // 当服务列表为空时是否更新本地缓存，true: 更新,false: 不更新
	OpenKms              bool                   `protobuf:"varint,42,opt,name=open_kms,json=openKms,proto3" json:"open_kms,omitempty"`                                            // 是否开启kms加密，true: 开启，false: 关闭
	LogLevel             string                 `protobuf:"bytes,50,opt,name=log_level,json=logLevel,proto3" json:"log_level,omitempty"`                                          // 日志等级
	LogDir               string                 `protobuf:"bytes,51,opt,name=log_dir,json=logDir,proto3" json:"log_dir,omitempty"`                                                // 日志目录
	CacheDir             string                 `protobuf:"bytes,52,opt,name=cache_dir,json=cacheDir,proto3" json:"cache_dir,omitempty"`                                          // 缓存目录
	ContextPath          string                 `protobuf:"bytes,53,opt,name=context_path,json=contextPath,proto3" json:"context_path,omitempty"`                                 // 上下文路径
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *Registry_Nacos) Reset() {
	*x = Registry_Nacos{}
	mi := &file_conf_v1_kratos_conf_registry_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Registry_Nacos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Registry_Nacos) ProtoMessage() {}

func (x *Registry_Nacos) ProtoReflect() protoreflect.Message {
	mi := &file_conf_v1_kratos_conf_registry_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Registry_Nacos.ProtoReflect.Descriptor instead.
func (*Registry_Nacos) Descriptor() ([]byte, []int) {
	return file_conf_v1_kratos_conf_registry_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Registry_Nacos) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Registry_Nacos) GetPort() uint64 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Registry_Nacos) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *Registry_Nacos) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *Registry_Nacos) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *Registry_Nacos) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

func (x *Registry_Nacos) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *Registry_Nacos) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

func (x *Registry_Nacos) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Registry_Nacos) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Registry_Nacos) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *Registry_Nacos) GetBeatInterval() *durationpb.Duration {
	if x != nil {
		return x.BeatInterval
	}
	return nil
}

func (x *Registry_Nacos) GetListenInterval() *durationpb.Duration {
	if x != nil {
		return x.ListenInterval
	}
	return nil
}

func (x *Registry_Nacos) GetUpdateThreadNum() int32 {
	if x != nil {
		return x.UpdateThreadNum
	}
	return 0
}

func (x *Registry_Nacos) GetNotLoadCacheAtStart() bool {
	if x != nil {
		return x.NotLoadCacheAtStart
	}
	return false
}

func (x *Registry_Nacos) GetUpdateCacheWhenEmpty() bool {
	if x != nil {
		return x.UpdateCacheWhenEmpty
	}
	return false
}

func (x *Registry_Nacos) GetOpenKms() bool {
	if x != nil {
		return x.OpenKms
	}
	return false
}

func (x *Registry_Nacos) GetLogLevel() string {
	if x != nil {
		return x.LogLevel
	}
	return ""
}

func (x *Registry_Nacos) GetLogDir() string {
	if x != nil {
		return x.LogDir
	}
	return ""
}

func (x *Registry_Nacos) GetCacheDir() string {
	if x != nil {
		return x.CacheDir
	}
	return ""
}

func (x *Registry_Nacos) GetContextPath() string {
	if x != nil {
		return x.ContextPath
	}
	return ""
}

// Kubernetes
type Registry_Kubernetes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Registry_Kubernetes) Reset() {
	*x = Registry_Kubernetes{}
	mi := &file_conf_v1_kratos_conf_registry_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Registry_Kubernetes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Registry_Kubernetes) ProtoMessage() {}

func (x *Registry_Kubernetes) ProtoReflect() protoreflect.Message {
	mi := &file_conf_v1_kratos_conf_registry_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Registry_Kubernetes.ProtoReflect.Descriptor instead.
func (*Registry_Kubernetes) Descriptor() ([]byte, []int) {
	return file_conf_v1_kratos_conf_registry_proto_rawDescGZIP(), []int{0, 4}
}

// Eureka
type Registry_Eureka struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Endpoints         []string               `protobuf:"bytes,1,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	HeartbeatInterval *durationpb.Duration   `protobuf:"bytes,2,opt,name=heartbeat_interval,json=heartbeatInterval,proto3" json:"heartbeat_interval,omitempty"`
	RefreshInterval   *durationpb.Duration   `protobuf:"bytes,3,opt,name=refresh_interval,json=refreshInterval,proto3" json:"refresh_interval,omitempty"`
	Path              string                 `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Registry_Eureka) Reset() {
	*x = Registry_Eureka{}
	mi := &file_conf_v1_kratos_conf_registry_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Registry_Eureka) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Registry_Eureka) ProtoMessage() {}

func (x *Registry_Eureka) ProtoReflect() protoreflect.Message {
	mi := &file_conf_v1_kratos_conf_registry_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Registry_Eureka.ProtoReflect.Descriptor instead.
func (*Registry_Eureka) Descriptor() ([]byte, []int) {
	return file_conf_v1_kratos_conf_registry_proto_rawDescGZIP(), []int{0, 5}
}

func (x *Registry_Eureka) GetEndpoints() []string {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *Registry_Eureka) GetHeartbeatInterval() *durationpb.Duration {
	if x != nil {
		return x.HeartbeatInterval
	}
	return nil
}

func (x *Registry_Eureka) GetRefreshInterval() *durationpb.Duration {
	if x != nil {
		return x.RefreshInterval
	}
	return nil
}

func (x *Registry_Eureka) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// Polaris
type Registry_Polaris struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"` // 服务端地址
	Port          int32                  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`      // 服务端端口
	InstanceCount int32                  `protobuf:"varint,3,opt,name=instance_count,json=instanceCount,proto3" json:"instance_count,omitempty"`
	Namespace     string                 `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Service       string                 `protobuf:"bytes,5,opt,name=service,proto3" json:"service,omitempty"`
	Token         string                 `protobuf:"bytes,6,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Registry_Polaris) Reset() {
	*x = Registry_Polaris{}
	mi := &file_conf_v1_kratos_conf_registry_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Registry_Polaris) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Registry_Polaris) ProtoMessage() {}

func (x *Registry_Polaris) ProtoReflect() protoreflect.Message {
	mi := &file_conf_v1_kratos_conf_registry_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Registry_Polaris.ProtoReflect.Descriptor instead.
func (*Registry_Polaris) Descriptor() ([]byte, []int) {
	return file_conf_v1_kratos_conf_registry_proto_rawDescGZIP(), []int{0, 6}
}

func (x *Registry_Polaris) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Registry_Polaris) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Registry_Polaris) GetInstanceCount() int32 {
	if x != nil {
		return x.InstanceCount
	}
	return 0
}

func (x *Registry_Polaris) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Registry_Polaris) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *Registry_Polaris) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// Servicecomb
type Registry_Servicecomb struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Endpoints     []string               `protobuf:"bytes,1,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Registry_Servicecomb) Reset() {
	*x = Registry_Servicecomb{}
	mi := &file_conf_v1_kratos_conf_registry_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Registry_Servicecomb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Registry_Servicecomb) ProtoMessage() {}

func (x *Registry_Servicecomb) ProtoReflect() protoreflect.Message {
	mi := &file_conf_v1_kratos_conf_registry_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Registry_Servicecomb.ProtoReflect.Descriptor instead.
func (*Registry_Servicecomb) Descriptor() ([]byte, []int) {
	return file_conf_v1_kratos_conf_registry_proto_rawDescGZIP(), []int{0, 7}
}

func (x *Registry_Servicecomb) GetEndpoints() []string {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

var File_conf_v1_kratos_conf_registry_proto protoreflect.FileDescriptor

const file_conf_v1_kratos_conf_registry_proto_rawDesc = "" +
	"\n" +
	"\"conf/v1/kratos_conf_registry.proto\x12\x04conf\x1a\x1egoogle/protobuf/duration.proto\"\xdf\x0f\n" +
	"\bRegistry\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x122\n" +
	"\x06consul\x18\x02 \x01(\v2\x15.conf.Registry.ConsulH\x00R\x06consul\x88\x01\x01\x12,\n" +
	"\x04etcd\x18\x03 \x01(\v2\x13.conf.Registry.EtcdH\x01R\x04etcd\x88\x01\x01\x12;\n" +
	"\tzookeeper\x18\x04 \x01(\v2\x18.conf.Registry.ZooKeeperH\x02R\tzookeeper\x88\x01\x01\x12/\n" +
	"\x05nacos\x18\x05 \x01(\v2\x14.conf.Registry.NacosH\x03R\x05nacos\x88\x01\x01\x12>\n" +
	"\n" +
	"kubernetes\x18\x06 \x01(\v2\x19.conf.Registry.KubernetesH\x04R\n" +
	"kubernetes\x88\x01\x01\x122\n" +
	"\x06eureka\x18\a \x01(\v2\x15.conf.Registry.EurekaH\x05R\x06eureka\x88\x01\x01\x125\n" +
	"\apolaris\x18\b \x01(\v2\x16.conf.Registry.PolarisH\x06R\apolaris\x88\x01\x01\x12A\n" +
	"\vservicecomb\x18\t \x01(\v2\x1a.conf.Registry.ServicecombH\aR\vservicecomb\x88\x01\x01\x1a]\n" +
	"\x06Consul\x12\x16\n" +
	"\x06scheme\x18\x01 \x01(\tR\x06scheme\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\x12!\n" +
	"\fhealth_check\x18\x03 \x01(\bR\vhealthCheck\x1a$\n" +
	"\x04Etcd\x12\x1c\n" +
	"\tendpoints\x18\x01 \x03(\tR\tendpoints\x1a^\n" +
	"\tZooKeeper\x12\x1c\n" +
	"\tendpoints\x18\x01 \x03(\tR\tendpoints\x123\n" +
	"\atimeout\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\atimeout\x1a\x82\x06\n" +
	"\x05Nacos\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12\x12\n" +
	"\x04port\x18\x02 \x01(\x04R\x04port\x12!\n" +
	"\fnamespace_id\x18\x03 \x01(\tR\vnamespaceId\x12\x1b\n" +
	"\tregion_id\x18\x04 \x01(\tR\bregionId\x12\x19\n" +
	"\bapp_name\x18\x05 \x01(\tR\aappName\x12\x17\n" +
	"\aapp_key\x18\x06 \x01(\tR\x06appKey\x12\x1d\n" +
	"\n" +
	"access_key\x18\a \x01(\tR\taccessKey\x12\x1d\n" +
	"\n" +
	"secret_key\x18\b \x01(\tR\tsecretKey\x12\x1a\n" +
	"\busername\x18\t \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\n" +
	" \x01(\tR\bpassword\x123\n" +
	"\atimeout\x18\x14 \x01(\v2\x19.google.protobuf.DurationR\atimeout\x12>\n" +
	"\rbeat_interval\x18\x15 \x01(\v2\x19.google.protobuf.DurationR\fbeatInterval\x12B\n" +
	"\x0flisten_interval\x18\x16 \x01(\v2\x19.google.protobuf.DurationR\x0elistenInterval\x12*\n" +
	"\x11update_thread_num\x18\x1e \x01(\x05R\x0fupdateThreadNum\x124\n" +
	"\x17not_load_cache_at_start\x18( \x01(\bR\x13notLoadCacheAtStart\x125\n" +
	"\x17update_cache_when_empty\x18) \x01(\bR\x14updateCacheWhenEmpty\x12\x19\n" +
	"\bopen_kms\x18* \x01(\bR\aopenKms\x12\x1b\n" +
	"\tlog_level\x182 \x01(\tR\blogLevel\x12\x17\n" +
	"\alog_dir\x183 \x01(\tR\x06logDir\x12\x1b\n" +
	"\tcache_dir\x184 \x01(\tR\bcacheDir\x12!\n" +
	"\fcontext_path\x185 \x01(\tR\vcontextPath\x1a\f\n" +
	"\n" +
	"Kubernetes\x1a\xca\x01\n" +
	"\x06Eureka\x12\x1c\n" +
	"\tendpoints\x18\x01 \x03(\tR\tendpoints\x12H\n" +
	"\x12heartbeat_interval\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\x11heartbeatInterval\x12D\n" +
	"\x10refresh_interval\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\x0frefreshInterval\x12\x12\n" +
	"\x04path\x18\x04 \x01(\tR\x04path\x1a\xac\x01\n" +
	"\aPolaris\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12\x12\n" +
	"\x04port\x18\x02 \x01(\x05R\x04port\x12%\n" +
	"\x0einstance_count\x18\x03 \x01(\x05R\rinstanceCount\x12\x1c\n" +
	"\tnamespace\x18\x04 \x01(\tR\tnamespace\x12\x18\n" +
	"\aservice\x18\x05 \x01(\tR\aservice\x12\x14\n" +
	"\x05token\x18\x06 \x01(\tR\x05token\x1a+\n" +
	"\vServicecomb\x12\x1c\n" +
	"\tendpoints\x18\x01 \x03(\tR\tendpointsB\t\n" +
	"\a_consulB\a\n" +
	"\x05_etcdB\f\n" +
	"\n" +
	"_zookeeperB\b\n" +
	"\x06_nacosB\r\n" +
	"\v_kubernetesB\t\n" +
	"\a_eurekaB\n" +
	"\n" +
	"\b_polarisB\x0e\n" +
	"\f_servicecombB\x89\x01\n" +
	"\bcom.confB\x17KratosConfRegistryProtoP\x01Z4github.com/tx7do/kratos-bootstrap/api/gen/go/conf/v1\xa2\x02\x03CXX\xaa\x02\x04Conf\xca\x02\x04Conf\xe2\x02\x10Conf\\GPBMetadata\xea\x02\x04Confb\x06proto3"

var (
	file_conf_v1_kratos_conf_registry_proto_rawDescOnce sync.Once
	file_conf_v1_kratos_conf_registry_proto_rawDescData []byte
)

func file_conf_v1_kratos_conf_registry_proto_rawDescGZIP() []byte {
	file_conf_v1_kratos_conf_registry_proto_rawDescOnce.Do(func() {
		file_conf_v1_kratos_conf_registry_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_conf_v1_kratos_conf_registry_proto_rawDesc), len(file_conf_v1_kratos_conf_registry_proto_rawDesc)))
	})
	return file_conf_v1_kratos_conf_registry_proto_rawDescData
}

var file_conf_v1_kratos_conf_registry_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_conf_v1_kratos_conf_registry_proto_goTypes = []any{
	(*Registry)(nil),             // 0: conf.Registry
	(*Registry_Consul)(nil),      // 1: conf.Registry.Consul
	(*Registry_Etcd)(nil),        // 2: conf.Registry.Etcd
	(*Registry_ZooKeeper)(nil),   // 3: conf.Registry.ZooKeeper
	(*Registry_Nacos)(nil),       // 4: conf.Registry.Nacos
	(*Registry_Kubernetes)(nil),  // 5: conf.Registry.Kubernetes
	(*Registry_Eureka)(nil),      // 6: conf.Registry.Eureka
	(*Registry_Polaris)(nil),     // 7: conf.Registry.Polaris
	(*Registry_Servicecomb)(nil), // 8: conf.Registry.Servicecomb
	(*durationpb.Duration)(nil),  // 9: google.protobuf.Duration
}
var file_conf_v1_kratos_conf_registry_proto_depIdxs = []int32{
	1,  // 0: conf.Registry.consul:type_name -> conf.Registry.Consul
	2,  // 1: conf.Registry.etcd:type_name -> conf.Registry.Etcd
	3,  // 2: conf.Registry.zookeeper:type_name -> conf.Registry.ZooKeeper
	4,  // 3: conf.Registry.nacos:type_name -> conf.Registry.Nacos
	5,  // 4: conf.Registry.kubernetes:type_name -> conf.Registry.Kubernetes
	6,  // 5: conf.Registry.eureka:type_name -> conf.Registry.Eureka
	7,  // 6: conf.Registry.polaris:type_name -> conf.Registry.Polaris
	8,  // 7: conf.Registry.servicecomb:type_name -> conf.Registry.Servicecomb
	9,  // 8: conf.Registry.ZooKeeper.timeout:type_name -> google.protobuf.Duration
	9,  // 9: conf.Registry.Nacos.timeout:type_name -> google.protobuf.Duration
	9,  // 10: conf.Registry.Nacos.beat_interval:type_name -> google.protobuf.Duration
	9,  // 11: conf.Registry.Nacos.listen_interval:type_name -> google.protobuf.Duration
	9,  // 12: conf.Registry.Eureka.heartbeat_interval:type_name -> google.protobuf.Duration
	9,  // 13: conf.Registry.Eureka.refresh_interval:type_name -> google.protobuf.Duration
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_conf_v1_kratos_conf_registry_proto_init() }
func file_conf_v1_kratos_conf_registry_proto_init() {
	if File_conf_v1_kratos_conf_registry_proto != nil {
		return
	}
	file_conf_v1_kratos_conf_registry_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_conf_v1_kratos_conf_registry_proto_rawDesc), len(file_conf_v1_kratos_conf_registry_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_conf_v1_kratos_conf_registry_proto_goTypes,
		DependencyIndexes: file_conf_v1_kratos_conf_registry_proto_depIdxs,
		MessageInfos:      file_conf_v1_kratos_conf_registry_proto_msgTypes,
	}.Build()
	File_conf_v1_kratos_conf_registry_proto = out.File
	file_conf_v1_kratos_conf_registry_proto_goTypes = nil
	file_conf_v1_kratos_conf_registry_proto_depIdxs = nil
}
